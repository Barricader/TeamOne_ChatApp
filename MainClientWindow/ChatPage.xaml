<Page x:Class="MainClientWindow.Chat"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MainClientWindow"
      xmlns:exten="clr-namespace:MainClientWindow.Converters"
      xmlns:rules="clr-namespace:ChatBase.Rules;assembly=ChatBase"
      xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms" 
      mc:Ignorable="d" 
      d:DesignHeight="567.808" d:DesignWidth="1064.369"
      Title="Chat"
      KeepAlive="True">
    <Grid Background="MediumPurple">
        <Grid.RowDefinitions>
            <RowDefinition Height="0*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25*"></ColumnDefinition>
            <ColumnDefinition Width="75*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel x:Name="LeftStackTop" Background="MediumPurple" Grid.Column="0" Grid.RowSpan="2">
            <ItemsControl x:Name="RoomsListView">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Button Content="{Binding Path=Name}" Click="SwitchRoomButton" Width="290"/>
                            <Grid>
                                <Ellipse x:Name="NotificationEllipse" Height="20" Width="20" Fill="Red" Visibility="{Binding NewMessages, Converter={StaticResource NotificationToVisibility}}"></Ellipse>
                                <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding NewMessages}" Visibility="{Binding NewMessages, Converter={StaticResource NotificationToVisibility}}" MouseDown="NotificationMouseDown"/>
                            </Grid>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        <StackPanel x:Name="LeftStackBottom" Grid.Column="0" VerticalAlignment="Bottom" Margin="0,-20,0,0" Grid.RowSpan="2">
            <TextBox x:Name="roomNameTextBox" Text="{Binding Path=CurRoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Height="20" Background="GhostWhite"></TextBox>
            <Button x:Name="RoomGenerationButton" Width="150" Content="New Room" Click="RoomGenClickHandler" Background="CornflowerBlue"/>
            <Image Height="300" Width="300" x:Name="userAvatarChatPage" Source="icons/defaultAvatar.png"/>
            <Button Width="150" Content="User Settings" Click="UserSettingsButton_Click" Background="CornflowerBlue"/>
            <StackPanel>
                <ItemsControl x:Name="ConnectedUsersView">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding Path=ScreenName}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </StackPanel>

        <Grid Grid.Column="1" Grid.RowSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="8*" />
                <RowDefinition Height="2*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">
                <Label Content="{Binding ElementName=RoomsListView, Path=SelectionBoxItem}" FontSize="30" Height="40"></Label>
            </StackPanel>
            
            <TextBox x:Name="tbServerIP" Grid.Row="1" Width="180" Height="30" FontFamily="Arial" FontSize="20" BorderThickness="1"
                     HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxLength="15" Visibility="{Binding Path=ConnectedToServer, Converter={StaticResource notBoolToVisibility}}">
                <TextBox.Style>
                    <Style x:Name="FullError" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border x:Name="bg" BorderBrush="#FF825E5E" BorderThickness="1">
                                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="Validation.HasError" Value="True">
                                                    <Trigger.Setters>
                                                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                                                        <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                                                        <Setter Property="BorderBrush" TargetName="bg" Value="Red"/>
                                                        <Setter Property="Background" TargetName="bg" Value="White"/>
                                                    </Trigger.Setters>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding Path="ServerIP" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <rules:IPRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label Grid.Row="1" Width="200" Height="40" Content="Server IP" FontFamily="Arial" FontSize="24" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Margin="0 0 0 80" Visibility="{Binding Path=ConnectedToServer, Converter={StaticResource notBoolToVisibility}}"/>
            <Button Grid.Row="1" Width="100" Height="30" Content="Connect" FontFamily="Arial" FontSize="16" Margin="0 100 0 0" Click="ServerIPClick" Visibility="{Binding Path=ConnectedToServer, Converter={StaticResource notBoolToVisibility}}"/>
            <Label x:Name="serverIPError" Grid.Row="1" Visibility="Hidden" Foreground="#C0D00000" Width="200" Height="30" FontSize="16"
                   HorizontalContentAlignment="Center" Content="Invalid IP Address" Margin="0 160 0 0"/>
            <Label x:Name="ipHint" Grid.Row="1" Width="400" Height="30" FontSize="16" HorizontalContentAlignment="Center" Content="Neumont Network: Try 10.10.14.75"
                   Margin="0 0 0 160" Visibility="{Binding Path=ConnectedToServer, Converter={StaticResource notBoolToVisibility}}"/>

            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Background="GhostWhite" Visibility="{Binding Path=ConnectedToServer, Converter={StaticResource boolToVisibility}}">
                <StackPanel x:Name="MessagesStackPanel" VerticalAlignment="Bottom" Background="AliceBlue">
                    <ItemsControl x:Name="MessagesItemControl">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border BorderBrush="Black" BorderThickness="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"></RowDefinition>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <DockPanel Grid.Row="0" Background="AliceBlue">
                                            <Label FontFamily="Arial" FontSize="15" FontWeight="Bold" Content="{Binding Path=Owner.ScreenName}"></Label>
                                            <Label FontFamily="Arial" FontSize="12" Content="{Binding Path=TimeStamp}"></Label>
                                        </DockPanel>
                                        <RichTextBox IsDocumentEnabled="True" IsReadOnly="True" BorderThickness="0" Grid.Row="1" Margin="2" exten:TextBlockExtension.FormattedText="{Binding Path=Content}" Background="AliceBlue"/>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </ScrollViewer>
            <TextBox x:Name="messageBox" Grid.Row="2" TextChanged="MessageBoxTextChanged" AllowDrop="True" HorizontalAlignment="Right" Margin="0,0,10,0" FontSize="14"
                     Height="70" TextWrapping="Wrap" Width="500" KeyDown="MBKeyDown" MaxLength="180" BorderBrush="Black" BorderThickness="1" Background="GhostWhite"
                     FontFamily="Arial">
                <TextBox.Style>
                    <Style x:Name="TextBoxFullError" TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="BorderThickness" Value="4" />
                                <Setter Property="BorderBrush" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
                <TextBox.Text>
                    <Binding Path="CurMessage" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <rules:MaxCharsRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Label x:Name="msgError" Grid.Row="2" HorizontalAlignment="Left" Visibility="Hidden" Foreground="#C0D00000"
                   Content="Maximum message length is 180 characters" Margin="440,87,0,0"/>
            <DockPanel LastChildFill="True" Grid.Row="3" Margin="15,0,0,0" Background="MediumPurple">
                <Button HorizontalAlignment="Left" Height="50" Width="50" Click="FileAttachmentButtonHandler">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Source="icons/attachment.bmp"/>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button HorizontalAlignment="Left" Height="50" Width="50" Margin="10,0,10,0" Click="ImageAttachmentButtonHandler">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Source="icons/photoattachment.bmp"/>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <ToggleButton HorizontalAlignment="Left" Height="50" Width="50" Click="EmojiAttachmentHandler" x:Name="emojiButton">
                    <Image Source="icons/emoji.bmp"/>
                </ToggleButton>
                <Grid Visibility="{Binding ElementName=emojiButton, Path=IsChecked, Converter={StaticResource boolToVisibility}}"
                  Background="MediumPurple"
                      Margin="10, 0, 0, 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <ToggleButton Content="&#x263a;"
                              Background="CornflowerBlue"
                              FontSize="24"
                              Height="50"
                              Grid.Column="0"
                              Click="Emoji1ToggleButton_Click"/>
                    <ToggleButton Content="&#x2639;"
                              Background="CornflowerBlue"
                              Height="50"
                              FontSize="24"
                              Grid.Column="1"
                              Click="Emoji2ToggleButton_Click"/>
                    <ToggleButton Content="&#x2764;"
                              Background="CornflowerBlue"
                              Height="50"
                              FontSize="24"
                              Grid.Column="2"
                              Click="Emoji3ToggleButton_Click"/>
                    <ToggleButton Content="&#x2620;"                            
                              Background="CornflowerBlue"
                              Height="50"
                              FontSize="24"
                              Grid.Column="3"
                              Click="Emoji4ToggleButton_Click"/>
                </Grid>
            </DockPanel>
        </Grid>
    </Grid>

</Page>
